//#include <SoftwareSerial.h>
#include <TinyWireM.h>
#include "src/ssd1327.h"

//SoftwareSerial serial(4, 3);

#define SSD1327_COMMAND_BYTE 0x00
#define SSD1327_DATA_BYTE 0x40
#define MAX_PACKAGE_LENGTH 16
#define address 0x3C

ssd1327 _display;

void pr(char* data) {
  //serial.println(data);
}

void setup() {
  //serial.begin(9600);

  _display.sendCommand(0xFD, 0x01, 0x12);                               // Unlock OLED
  _display.sendCommand(0xAE, 0x00);                                     // OFF
  //sendCommand(0xA8, 0x7F);                                            // multiplex 128
  //sendCommand(0xA1, 0x01, 0x00);                                      // Start line
  //sendCommand(0xA2, 0x01, 0x00);                                      // Display offset
  _display.remap(0x51);
  //_display.sendCommand(0xA0, 0x01, 0x40 | 0x10 | 0x00 | (0x02 | 0x01));
  _display.sendCommand(0xAB, 0x01, 0x01);                               // VDD internal
  //_display.sendCommand(0x81, 0x01, 0x70);                             // CONTRAST
  /*_display.sendCommand(0xB1, 0x01, 0x55);                             // PHASE 0x51
  _display.sendCommand(0xB3, 0x01, 0x01);                               // CLK*/
  _display.sendCommand(0xBC, 0x01, 0x08);                               // PRECHARGE
  _display.sendCommand(0xBE, 0x01, 0x07);                               // VCOMH voltage
  _display.sendCommand(0xB6, 0x01, 0x01);                               // Second pre-charge
  _display.sendCommand(0xA4, 0x00);                                     // NORMAL
  _display.sendCommand(0x2E, 0x00);                                     // Deactivate scroll

  _display.on();
  delay(500);
}

const PROGMEM uint8_t heart [] = {
  0, 0, 0, 0, 0, 10, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 8, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 7, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};
const uint8_t heartWidth = 36;
const uint8_t heartHeight = 32;

const PROGMEM uint8_t framesLength[]{66, 66, 74, 78, 74, 72, 72, 76, 70, 70, 72, 70, 76, 64, 78, 72, 74, 72, 83, 73, 67, 76, 84, 82, 68, 72, 72};
const PROGMEM uint8_t frames[]{0, 2, 4, 6, 8, 10, 8, 12, 14, 16, 18, 10, 20, 16, 18, 10, 22, 12, 4, 10, 24, 2, 26, 10, 24, 28, 30, 12, 32, 16, 32, 34, 36, 16, 24, 10, 32, 38, 40, 2, 32, 42, 44, 46, 44, 46, 44, 46, 44, 46, 40, 48, 40, 46, 50, 52, 40, 48, 40, 48, 50, 52, 50, 52, 54, 56, 58, 10, 60, 2, 62, 6, 14, 12, 64, 12, 14, 12, 64, 12, 14, 66, 68, 16, 24, 16, 70, 16, 24, 6, 72, 66, 32, 34, 74, 6, 32, 34, 36, 76, 40, 76, 40, 48, 40, 46, 44, 46, 44, 46, 40, 46, 44, 46, 44, 46, 44, 46, 44, 46, 44, 48, 44, 46, 54, 12, 24, 48, 54, 12, 24, 76, 78, 2, 62, 6, 14, 10, 80, 12, 14, 12, 64, 12, 14, 16, 82, 12, 22, 16, 26, 16, 22, 2, 84, 2, 24, 28, 36, 28, 32, 38, 40, 48, 44, 46, 44, 46, 44, 46, 44, 46, 44, 52, 50, 86, 32, 38, 44, 38, 24, 34, 44, 38, 22, 34, 50, 86, 24, 34, 50, 46, 44, 46, 44, 48, 54, 12, 24, 76, 50, 10, 32, 88, 40, 46, 90, 2, 62, 2, 4, 10, 32, 12, 32, 10, 14, 12, 64, 12, 14, 16, 22, 12, 92, 12, 8, 66, 84, 2, 22, 6, 36, 28, 24, 34, 40, 46, 44, 46, 44, 94, 24, 6, 44, 86, 22, 6, 44, 94, 24, 6, 44, 42, 32, 6, 44, 52, 50, 52, 50, 56, 54, 56, 96, 98, 44, 46, 54, 12, 32, 48, 50, 12, 32, 76, 44, 76, 100, 10, 32, 102, 74, 102, 90, 2, 62, 6, 14, 10, 22, 10, 14, 12, 64, 12, 14, 16, 22, 12, 104, 10, 72, 2, 22, 2, 74, 28, 22, 34, 44, 86, 32, 16, 32, 66, 44, 106, 22, 66, 50, 108, 24, 66, 50, 108, 24, 66, 50, 52, 50, 52, 50, 52, 54, 98, 110, 2, 24, 76, 112, 2, 32, 46, 114, 116, 110, 118, 110, 118, 50, 46, 40, 88, 36, 88, 36, 88, 120, 16, 60, 2, 4, 6, 4, 12, 80, 10, 70, 10, 80, 10, 14, 16, 122, 2, 22, 16, 124, 34, 22, 2, 36, 38, 24, 28, 44, 52, 50, 88, 24, 10, 50, 88, 24, 10, 54, 48, 32, 10, 54, 48, 32, 10, 54, 56, 96, 98, 110, 38, 32, 108, 112, 38, 32, 102, 112, 126, 114, 126, 112, 118, 44, 46, 44, 48, 40, 88, 36, 88, 78, 2, 62, 2, 4, 12, 80, 10, 14, 12, 80, 10, 14, 16, 128, 10, 32, 10, 22, 12, 72, 66, 32, 10, 22, 66, 36, 6, 32, 16, 24, 6, 40, 86, 32, 34, 50, 52, 50, 52, 50, 52, 50, 52, 50, 48, 44, 46, 50, 52, 32, 12, 96, 6, 24, 102, 110, 28, 32, 102, 110, 116, 112, 116, 96, 98, 50, 46, 44, 46, 44, 88, 130, 12, 132, 2, 62, 2, 8, 10, 14, 12, 64, 12, 14, 10, 82, 10, 62, 10, 32, 10, 24, 16, 84, 66, 32, 10, 24, 2, 36, 6, 32, 10, 24, 28, 44, 86, 32, 38, 50, 52, 50, 52, 50, 52, 50, 52, 50, 88, 32, 16, 50, 102, 24, 16, 54, 88, 24, 16, 54, 56, 54, 10, 24, 48, 96, 16, 32, 48, 96, 98, 96, 56, 50, 52, 44, 88, 134, 6, 4, 6, 8, 10, 18, 10, 14, 10, 80, 12, 136, 10, 132, 16, 24, 12, 70, 2, 32, 2, 30, 34, 32, 6, 100, 6, 32, 10, 24, 28, 44, 46, 44, 52, 50, 52, 50, 52, 50, 42, 24, 6, 54, 106, 24, 6, 50, 106, 32, 6, 50, 52, 54, 56, 54, 98, 54, 52, 44, 46, 96, 12, 24, 48, 50, 12, 32, 76, 138, 16, 60, 6, 4, 6, 18, 10, 8, 12, 4, 12, 80, 12, 140, 16, 60, 66, 62, 2, 32, 10, 142, 108, 74, 66, 32, 16, 32, 28, 40, 28, 32, 10, 32, 34, 50, 52, 50, 52, 50, 52, 50, 52, 50, 106, 24, 2, 50, 106, 24, 2, 50, 106, 24, 2, 44, 52, 44, 52, 44, 46, 96, 12, 24, 48, 54, 52, 50, 46, 144, 66, 60, 2, 62, 10, 32, 16, 18, 10, 14, 10, 22, 10, 60, 12, 32, 12, 146, 10, 60, 12, 32, 10, 60, 66, 14, 86, 84, 66, 32, 12, 32, 34, 100, 28, 80, 28, 44, 52, 50, 52, 50, 52, 50, 52, 50, 52, 50, 66, 32, 102, 50, 88, 24, 10, 50, 76, 32, 10, 50, 76, 32, 16, 54, 98, 110, 118, 110, 98, 54, 56, 148, 2, 62, 6, 132, 16, 18, 10, 14, 12, 80, 10, 14, 12, 80, 12, 150, 10, 18, 10, 60, 12, 32, 10, 14, 66, 32, 10, 26, 6, 24, 10, 30, 6, 32, 10, 24, 66, 36, 34, 24, 12, 32, 28, 44, 46, 44, 52, 50, 52, 50, 52, 54, 56, 54, 38, 24, 86, 54, 56, 54, 56, 54, 116, 114, 116, 112, 116, 110, 116, 148, 66, 60, 2, 62, 6, 18, 10, 14, 12, 80, 12, 4, 12, 32, 12, 24, 12, 150, 10, 18, 10, 18, 10, 14, 12, 32, 10, 32, 10, 142, 28, 24, 10, 30, 6, 32, 12, 22, 16, 74, 28, 64, 2, 40, 94, 24, 6, 44, 52, 50, 52, 50, 52, 50, 34, 32, 94, 50, 34, 32, 94, 54, 56, 54, 56, 54, 56, 96, 98, 22, 10, 152, 154, 114, 154, 0, 10, 60, 6, 4, 6, 18, 10, 8, 12, 4, 10, 22, 12, 146, 10, 18, 10, 62, 10, 32, 10, 26, 6, 32, 16, 84, 2, 32, 12, 24, 66, 74, 34, 80, 2, 100, 86, 24, 28, 50, 52, 50, 52, 50, 52, 50, 52, 50, 52, 50, 52, 54, 56, 54, 56, 54, 56, 54, 56, 54, 56, 54, 56, 134, 16, 62, 6, 14, 28, 14, 10, 80, 12, 14, 10, 18, 66, 156, 10, 32, 10, 14, 66, 32, 10, 70, 2, 32, 66, 84, 6, 24, 6, 36, 28, 22, 28, 40, 34, 32, 10, 32, 28, 44, 46, 50, 52, 50, 52, 50, 52, 50, 52, 50, 52, 50, 102, 32, 66, 50, 102, 32, 66, 54, 88, 32, 2, 96, 66, 32, 88, 54, 66, 24, 102, 54, 2, 32, 108, 44, 48, 158, 66, 4, 6, 14, 6, 4, 16, 132, 16, 132, 66, 20, 12, 8, 16, 60, 66, 32, 16, 142, 2, 24, 2, 30, 6, 24, 6, 36, 28, 24, 34, 50, 86, 32, 38, 44, 46, 44, 46, 44, 46, 44, 46, 50, 56, 54, 88, 32, 66, 54, 88, 32, 66, 54, 56, 54, 56, 54, 52, 54, 52, 44, 6, 32, 86, 100, 6, 32, 86, 36, 76, 160, 16, 62, 6, 14, 28, 70, 66, 60, 66, 60, 66, 60, 16, 162, 12, 8, 16, 14, 16, 80, 10, 72, 6, 22, 2, 74, 28, 22, 6, 40, 34, 24, 12, 32, 6, 44, 46, 44, 46, 44, 46, 50, 52, 50, 52, 50, 52, 50, 52, 50, 52, 54, 52, 50, 56, 54, 98, 54, 52, 96, 164, 32, 48, 50, 164, 24, 76, 50, 166, 22, 88, 36, 88, 168, 66, 62, 6, 14, 6, 14, 66, 60, 66, 60, 66, 60, 12, 8, 12, 170, 12, 4, 10, 60, 2, 80, 10, 30, 28, 80, 66, 100, 38, 80, 2, 40, 46, 44, 46, 50, 52, 50, 52, 96, 172, 56, 54, 56, 54, 56, 54, 56, 54, 56, 54, 106, 32, 34, 110, 164, 154, 174, 176, 152, 178, 174, 126, 110, 102, 22, 16, 54, 102, 74, 102, 160, 16, 62, 6, 14, 28, 70, 66, 60, 66, 60, 66, 60, 12, 32, 12, 132, 12, 20, 10, 22, 12, 14, 16, 4, 28, 22, 66, 36, 34, 22, 12, 32, 2, 40, 34, 24, 12, 32, 6, 44, 52, 50, 52, 50, 52, 96, 164, 56, 54, 56, 54, 56, 54, 56, 54, 106, 32, 28, 54, 106, 32, 28, 54, 98, 96, 118, 96, 126, 114, 176, 112, 126, 80, 164, 80, 88, 32, 38, 174, 88, 80, 10, 160, 12, 132, 6, 14, 28, 70, 28, 14, 66, 60, 66, 60, 16, 180, 16, 4, 6, 80, 10, 74, 38, 24, 166, 32, 66, 100, 34, 64, 2, 40, 46, 50, 52, 50, 52, 96, 172, 32, 52, 50, 52, 54, 56, 54, 56, 54, 56, 54, 98, 96, 42, 32, 38, 96, 42, 32, 38, 96, 154, 152, 166, 176, 182, 12, 24, 116, 96, 98, 96, 102, 24, 66, 184, 66, 62, 2, 14, 28, 14, 16, 132, 16, 132, 10, 8, 12, 68, 16, 80, 10, 72, 2, 80, 66, 74, 28, 80, 6, 44, 38, 32, 166, 24, 6, 44, 46, 44, 46, 44, 46, 44, 46, 96, 166, 32, 52, 50, 52, 166, 54, 52, 50, 56, 54, 46, 50, 52, 50, 56, 50, 56, 110, 166, 32, 56, 50, 46, 40, 88, 158, 10, 60, 2, 62, 6, 14, 10, 80, 12, 14, 12, 64, 12, 14, 66, 132, 12, 8, 12, 186, 12, 188, 10, 24, 16, 26, 66, 24, 66, 84, 2, 24, 28, 36, 28, 80, 28, 54, 38, 24, 12, 32, 28, 50, 52, 44, 46, 44, 46, 44, 52, 54, 56, 54, 56, 54, 102, 24, 66, 54, 88, 32, 66, 54, 56, 54, 56, 54, 52, 50, 46, 44, 76, 36, 88, 190, 10, 60, 6, 4, 6, 14, 12, 64, 12, 14, 12, 64, 12, 4, 10, 32, 12, 32, 12, 192, 12, 18, 10, 22, 10, 4, 10, 24, 10, 14, 16, 24, 2, 84, 2, 32, 34, 36, 2, 22, 12, 32, 28, 40, 28, 32, 12, 24, 28, 44, 46, 112, 172, 80, 46, 44, 52, 50, 52, 50, 52, 50, 102, 32, 66, 50, 108, 24, 66, 50, 102, 32, 2, 54, 56, 54, 52, 50, 52, 40, 88, 74, 106, 194, 16, 62, 6, 4, 28, 18, 10, 18, 10, 14, 10, 32, 12, 32, 12, 192, 12, 22, 10, 4, 12, 22, 10, 4, 16, 32, 10, 70, 2, 32, 6, 30, 6, 32, 34, 100, 28, 32, 12, 32, 34, 50, 34, 32, 12, 24, 34, 50, 52, 50, 52, 50, 52, 50, 56, 54, 56, 54, 56, 54, 56, 54, 12, 24, 46, 96, 12, 22, 102, 32, 10, 96, 10, 24, 102, 44, 46, 32, 12, 54, 56, 196, 66, 62, 6, 62, 10, 32, 10, 8, 12, 8, 12, 62, 12, 198, 10, 62, 12, 24, 10, 62, 10, 32, 10, 62, 10, 32, 16, 70, 66, 24, 66, 84, 6, 32, 34, 44, 34, 32, 10, 32, 34, 50, 94, 32, 34, 44, 52, 54, 56, 54, 56, 54, 56, 54, 56, 54, 98, 96, 98, 96, 118, 110, 118, 110, 118, 110, 116, 200, 16, 62, 6, 4, 6, 8, 12, 8, 12, 4, 10, 32, 12, 188, 10, 60, 12, 32, 10, 60, 12, 32, 10, 60, 2, 14, 66, 32, 66, 72, 16, 32, 10, 22, 66, 74, 2, 32, 12, 32, 38, 22, 164, 96, 28, 32, 94, 44, 46, 44, 46, 50, 56, 54, 56, 54, 56, 54, 56, 54, 2, 32, 88, 96, 98, 110, 118, 110, 118, 110, 118, 202, 10, 60, 6, 4, 6, 8, 12, 14, 12, 64, 12, 4, 10, 204, 16, 132, 16, 132, 16, 132, 16, 24, 10, 142, 66, 32, 12, 24, 2, 74, 66, 22, 12, 24, 28, 40, 2, 22, 12, 24, 28, 44, 52, 50, 52, 50, 52, 50, 52, 50, 52, 50, 52, 50, 52, 50, 12, 32, 46, 96, 10, 24, 48, 96, 10, 24, 48, 96, 98, 96, 98};
const PROGMEM uint8_t sequenceDictionary[] = 
{219, 0, 5, 13, 28, 0, 6, 13, 33, 0, 2, 13, 1, 13, 27, 0, 3, 13, 32, 0, 100, 0, 3, 0, 2, 0, 25, 0, 7, 13, 21, 0, 1, 0, 8, 13, 18, 0, 9, 13, 16, 0, 12, 13, 15, 0, 19, 13, 18, 13, 14, 0, 20, 13, 13, 0, 21, 13, 154, 0, 30, 0, 29, 0, 5, 0, 4, 13, 167, 0, 26, 0, 23, 0, 19, 0, 17, 13, 119, 0, 4, 0, 203, 0, 22, 0, 10, 13, 16, 13, 86, 0, 202, 0, 11, 13, 12, 0, 22, 13, 17, 0, 15, 13, 236, 0, 13, 13, 14, 13, 11, 0, 10, 0, 9, 0, 24, 13, 23, 13, 87, 0, 231, 0, 20, 0, 25, 13, 232, 0, 120, 0, 31, 0, 184, 0, 165, 0, 185, 0, 131, 0, 24, 0, 218, 0, 99, 0, 252, 0, 65, 0, 7, 0, 26, 13, 134, 0, 149, 0, 82, 0, 102, 0, 1, 20, 1, 14, 81, 0, 71, 0, 1, 12, 8, 0, 27, 13, 28, 13, 166, 0, 6, 0, 115, 0, 34, 0, 67, 0, 183, 0, 97, 0, 217, 0, 251, 0, 70, 0, 253, 0, 220, 0, 101, 0};
const uint8_t animationFrames = 27;
const uint8_t animationWidth = 34;
const uint8_t animationHeight = 33;

void loop() {
  _display.clear(0);

  for (uint8_t i = 0; i < 40; i++) {
    if (i > 0) {
      delay(10);
      _display.clearBorder(0, heartWidth, heartHeight, i - 1, i + 1);
    }
    
    _display.drawBitmap(heart, heartWidth, heartHeight, i, i + 2);
  }
  
  _display.clear(0, heartWidth, heartHeight, 40, 42);

  for (uint8_t j = 0; j < animationFrames; j++) {
    uint16_t offset = 0;
    
    for (uint8_t i = 0; i < animationFrames; i++) {
      _display.drawCompressedBitmap(frames, sequenceDictionary, offset, pgm_read_byte_near(framesLength + i), animationWidth, animationHeight, 40, 40);
      offset += pgm_read_byte_near(framesLength + i);
    }
  }
  
  delay(5000);
}
